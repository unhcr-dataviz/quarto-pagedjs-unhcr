---
title: UNHCR Paged HTML Template
subtitle: Subtitle
format: unhcr-paged-html
---

::: {.lead}

Create stunning **UNHCR branded paged** report mixing text, images, tables, plots, code and more, directly with this template.

:::

## Template

The template comes with predefined styles and components. You can modify many aspects directly from the document YAML or by simply using CSS classes, but we recommend you stick with the default options. Not all Quarto capabilities have been implemented yet but feel free to experiment.

#### Basic usage

UNHCR Paged HTML document is using [Bootstrap](https://getbootstrap.com/) availabe through Quarto, almost all the functionalities of the framework are available to you. You can add classes, attributes, and other identifiers to regions of content using Divs and Spans.

For example, here we add the `{.bg-primary}` class to a region of content using a div (`:::`):

```{markdown}
::: {.bg-primary}
This content will be styled with a UNHCR blue background
:::
```

You can achieve the same at the `span` level with inline styling. For example:

```{markdown}
This is normal text but [this text will be in UNHCR blue]{.text-primary}.
```

Check the Quarto documention on [Divs and Spans](https://quarto.org/docs/authoring/markdown-basics.html#divs-and-spans) for more information and examples.

#### Work in progress

The following elements still haven't been implemented and should be used with care: Cover page, Back page, Section page,Table of content, List of figures, List of tables, Footnotes, Abbreviations, Defining content in banner and footer. Please note, that some of them aren't even active.

# Typography

In this section you can see how to use inline markdown and `CSS` classes to impact the style of your text.

## Headings

Simply use the `markdown` notation for headings `#` to create your content structure. For example:

```{markdown}
# Heading 1
## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
```

[Heading 1]{.h1}

[Heading 2]{.h2}

[Heading 3]{.h3}

#### Heading 4

##### Heading 5

###### Heading 6

## Inline text

Simply use the `markdown` built-in notation to format your content. For example:

```{markdown}
*This line will render as italicized text.*

**This line will render as bold text.**

***This line will render as bold and italic text.***

`This line will render as inline code.`

~~This line will be strikethrough.~~

This line will include a [link to UNHCR webpage](https://www.unhcr.org/)
```

*This line will render as italicized text.*

**This line will render as bold text.**

***This line will render as bold and italic text.***

`This line will render as inline code.`

~~This line will be strikethrough.~~

This line will include a [link to UNHCR webpage](https://www.unhcr.org/)

Not all the formatting can be achieved with `markdown` only, but Quarto understands `HTML` so extra styling can be perfomed by directly entering `HTML` code in your Quarto document. For example:

```{markdown}
<u>This line of text will render as underlined.</u>
```

<u>This line of text will render as underlined.</u>

The template also includes some `CSS` classes to help with formating. For example:

```{markdown}
:::{.lead}
This is a lead paragraph. It stands out from regular paragraphs.
:::

You can use the mark class to [highlight]{.mark} text.

[This line of text is meant to be treated as fine print.]{.small}
```

:::{.lead}
This is a lead paragraph. It stands out from regular paragraphs.
:::

You can use the mark class to [highlight]{.mark} text.

[This line of text is meant to be treated as fine print.]{.small}


For more examples and options, check the [Bootstrap documentation on typography](https://getbootstrap.com/docs/5.3/content/typography/).

## Lists

The template comes with stylized lists, simply create them using `markdown` notation. For examples:

```{markdown}
* unordered list
    + sub-item 1
    + sub-item 2
        - sub-sub-item 1

1. ordered list
2. item 2
    i) sub-item 1
         A.  sub-sub-item 1
```

* unordered list
    + sub-item 1
    + sub-item 2
        - sub-sub-item 1

1. ordered list
2. item 2
    i) sub-item 1
         A.  sub-sub-item 1

## Blockquote

Blockquote can be achieved with `markdown` using the `>` notation. To include a quote author, add a blank line with the `>` character and a line with the `>` character for the author itself. For example:

```{markdown}
> "A simple blockquote"

> "A blockquote with source"
>
> From an important person
```

> A simple blockquote

> A blockquote with source
>
> From an important person

# Colors

Bootstrap comes with an extensive set of color helper classes for [text](https://getbootstrap.com/docs/5.3/utilities/colors/), [background](https://getbootstrap.com/docs/5.3/utilities/background/) and even [buttons](https://getbootstrap.com/docs/5.3/components/buttons/) as seen above. Nevertheless, we would recommend, you keep your document as simple as possible and stick to the `{primary}` and `{secondary}` color palettes of bootstrap.

To change the color, simply apply a specific `CSS` class to the desired element. For text and background, it starts with `{.text}` or `{.bg}` followed by the color name in bootstrap like `{-primary}`, `{-secondary}`, `{-warning}` and more.

Keep in mind that not all the text and background will work together and that you might need to tweak the element separately to make sure it is readable.

## Text color

For example, to add some UNHCR blue text to your content use the following code example:

```{markdown}
This my body text followed by [UNHCR blue]{.text-primary} text.
```

This my body text followed by [UNHCR blue]{.text-primary} text.

## Background color

As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.

For example, to create a UNHCR blue box with white text use the following code example:

```{markdown}
::: {.bg-primary .text-white .p-3}
A UNHCR blue box with white text and some padding for readability.
:::
```

::: {.bg-primary .text-white .px-3 .pt-3 .pb-1}
A UNHCR blue box with white text and some padding for readability.
:::

# Images

To include images in your document, simply use the `markdown` notation with the combination of [Bootstrap classes](https://getbootstrap.com/docs/5.3/content/images/). For example to get an image that is 80% of the with and centered use the following code example:

```{markdown, echo=TRUE}
![](path/to/image){width=80% .mx-auto .d-block}
```

![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/169_pics_landscape.png){width=80% .mx-auto .d-block}

See the layout section for more information on how to play with images and columns.

</div>


# Plots

Use the [`{unhcrthemes}`](https://vidonne.github.io/unhcrthemes/) package to produce UNHCR branded plots directly in the presentation. For example: 

```{r}
#| label: plot
#| warning: false
#| echo: false
#| fig-width: 6.8
#| fig-asp: .618
#| out-width: "100%"
#| fig-align: center

library(tidyverse)
library(unhcrthemes)

# Default Lato font also apply for geom_text and label
dplyr::count(mpg, class) |>
  dplyr::arrange(n) |>
  dplyr::mutate(class = factor(class, levels = class)) |>
  ggplot(aes(n, class)) +
  geom_col(fill = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(label = n), hjust = 0, nudge_x = 1) +
  labs(
    title = "Simple bar chart with labels using ggplot",
    subtitle = "This plot shows the default style of theme_unhcr()",
    caption = "Source: mtcars"
  ) +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y")
```

# Tables

Use the `knitr::kable()` function to insert simple already stylized tables. For example:

```{r}
knitr::kable(head(mpg))
```

# Source code 

To include code, use fenced code blocks with a language specifier. By default the `echo` parameter of code block is set to true, turn it to `false` to hide the code in the document.

```{markdown}
#| echo: true

\```{r}
#| echo: true
#| warning: false
library(tidyverse)
library(unhcrthemes)
\```

```

There are wide variety of options available to customize the display of source code within HTML documents, check the [Quarto documentation](https://quarto.org/docs/output-formats/html-code.html) for more information.

# Layout

By default the content will live within the margins defined for the document, but the [`CCS grid` capabilities of Bootstrap](https://getbootstrap.com/docs/5.3/layout/css-grid/) are available to you. For example, to create a two columns layout, use the following code example:

```{markdown, echo=TRUE}
:::{.grid}

:::{.g-col-6}
Content of first column
:::

:::{.g-col-6}
Content of first column
:::

:::
```

:::{.grid}

:::{.g-col-6}
Content of first column
:::

:::{.g-col-6}
Content of first column
:::

:::

Which also works with **images** and the columns don't have to be the same width:

:::{.grid}

:::{.g-col-8}
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla lobortis, diam eleifend pellentesque imperdiet, eros lorem lacinia urna, et aliquet felis ipsum id erat. Praesent dapibus vestibulum porta. Pellentesque quis nulla in nisl laoreet convallis ac sit amet magna. Nam auctor vehicula nibh sed ullamcorper. In hac habitasse platea dictumst.
:::

:::{.g-col-4}
![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/169_pics_landscape.png){width=100%}
:::

:::

Bootstrap is really flexible so you can, with some `CSS`, find ways to go outside the margin and for example have a full page with image as demonstrated below:

<div style="margin-left: -25mm; margin-right: -25mm">
![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/169_pics_landscape.png){fig-align="center" width=100%}


