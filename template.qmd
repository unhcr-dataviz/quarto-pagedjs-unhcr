---
title: Title
subtitle: Subtitle
format: unhcr-paged-html
---

## UNHCR Paged HTML Template

**TODO**

#### Cover

**TODO**

#### Table of content

**TODO**

#### Backcover

**TODO**

# Typography

:::{.grid}

:::{.g-col-8}

In this section, we will show the basic usage of the template on how to make UNHCR branded Paged HTML document but as Quarto is using [Bootstrap](https://getbootstrap.com/), almost all the functionalities of the framework are available to you. Please, refer to the offical [Bootstrap documentation](https://getbootstrap.com/docs/5.3/getting-started/introduction/) to see what you can do with some simple `CSS` classes.

:::

:::{.g-col-4}
You can add classes, attributes, and other identifiers to regions of content using Divs and Spans.
:::

:::

For example, here we add the `{.bg-primary}` class to a region of content using a div (`:::`):

```{markdown}
::: {.bg-primary}
This content will be styled with a UNHCR blue background
:::
```

You can achieve the same at the `span` level with inline styling. For example:

```{markdown}
This is normal text but [this text will be in UNHCR blue]{.text-primary}.
```

Check the Quarto documention on [Divs and Spans](https://quarto.org/docs/authoring/markdown-basics.html#divs-and-spans) for more information and examples.

## Headings

Simply use the `markdown` notation for headings `#` to create your content structure. For example:

```{markdown}
# Heading 1
## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
```

[Heading 1]{.h1}

[Heading 2]{.h2}

[Heading 3]{.h3}

#### Heading 4

##### Heading 5

###### Heading 6

## Inline text

Simply use the `markdown` built-in notation to format your content. For example:

```{markdown}
*This line will render as italicized text.*

**This line will render as bold text.**

***This line will render as bold and italic text.***

`This line will render as inline code.`

~~This line will be strikethrough.~~

This line will include a [link to UNHCR webpage](https://www.unhcr.org/)
```

*This line will render as italicized text.*

**This line will render as bold text.**

***This line will render as bold and italic text.***

`This line will render as inline code.`

~~This line will be strikethrough.~~

This line will include a [link to UNHCR webpage](https://www.unhcr.org/)

Not all the formatting can be achieved with `markdown` only, but Quarto understands `HTML` so extra styling can be perfomed by directly entering `HTML` code in your Quarto document. For example:

```{markdown}
<u>This line of text will render as underlined.</u>
```

<u>This line of text will render as underlined.</u>

The template also includes some `CSS` classes to help with formating. For example:

```{markdown}
:::{.lead}
This is a lead paragraph. It stands out from regular paragraphs.
:::

You can use the mark class to [highlight]{.mark} text.

[This line of text is meant to be treated as fine print.]{.small}
```

:::{.lead}
This is a lead paragraph. It stands out from regular paragraphs.
:::

You can use the mark class to [highlight]{.mark} text.

[This line of text is meant to be treated as fine print.]{.small}

## Footnotes and abbreviations

Useful for UNHCR document you can also create **footnotes** and **abbreviations** with the following code:

```{markdown}
This is a footnote^[Text of the footnote]

<abbr title="The United Nations High Commissioner for Refugees">UNHCR</abbr>
```

This is a footnote^[Text of the footnote]

<abbr title="The United Nations High Commissioner for Refugees">UNHCR</abbr>

For more examples and options, check the [Bootstrap documentation on typography](https://getbootstrap.com/docs/5.3/content/typography/).

## Lists

The template comes with stylized lists, simply create them using `markdown` notation. For examples:

```{markdown}
* unordered list
    + sub-item 1
    + sub-item 2
        - sub-sub-item 1

1. ordered list
2. item 2
    i) sub-item 1
         A.  sub-sub-item 1
```

* unordered list
    + sub-item 1
    + sub-item 2
        - sub-sub-item 1

1. ordered list
2. item 2
    i) sub-item 1
         A.  sub-sub-item 1

## Blockquote

Blockquote can be achieved with `markdown` using the `>` notation. To include a quote author, add a blank line with the `>` character and a line with the `>` character for the author itself. For example:

```{markdown}
> "A simple blockquote"

> "A blockquote with source"
>
> From an important person
```

> A simple blockquote

> A blockquote with source
>
> From an important person

# Colors

Bootstrap comes with an extensive set of color helper classes for [text](https://getbootstrap.com/docs/5.3/utilities/colors/), [background](https://getbootstrap.com/docs/5.3/utilities/background/) and even [buttons](https://getbootstrap.com/docs/5.3/components/buttons/) as seen above. Nevertheless, we would recommend, you keep your document as simple as possible and stick to the `{primary}` and `{secondary}` color palettes of bootstrap.

To change the color, simply apply a specific `CSS` class to the desired element. For text and background, it starts with `{.text}` or `{.bg}` followed by the color name in bootstrap like `{-primary}`, `{-secondary}`, `{-warning}` and more.

Keep in mind that not all the text and background will work together and that you might need to tweak the element separately to make sure it is readable.

## Text color

For example, to add some UNHCR blue text to your content use the following code example:

```{markdown}
This my body text followed by [UNHCR blue]{.text-primary} text.
```

This my body text followed by [UNHCR blue]{.text-primary} text.

## Background color

As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.

For example, to create a UNHCR blue box with white text use the following code example:

```{markdown}
::: {.bg-primary .text-white .p-3}
A UNHCR blue box with white text and some padding for readability.
:::
```

::: {.bg-primary .text-white .px-3 .pt-3 .pb-1}
A UNHCR blue box with white text and some padding for readability.
:::

# Images

<div style="margin-left: -25mm; margin-right: -25mm">
![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/169_pics_landscape.png){fig-align="center" width=100%}
</div>

As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.

For example, to create a UNHCR blue box with white text use the following code example:

:::{.grid}

:::{.g-col-8}
As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

<div style="margin-left: -3rem;">
For example, to create a UNHCR blue box with white text use the following code example:
</div>

:::

:::{.g-col-4}
![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/169_pics_landscape.png){width=100%}
:::

:::

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.

For example, to create a UNHCR blue box with white text use the following code example:

# Plots

Use the [`{unhcrthemes}`](https://vidonne.github.io/unhcrthemes/) package to produce UNHCR branded plots directly in the presentation. For example: 

```{r}
#| label: idp-plot
#| warning: false
#| echo: false
#| out-width: "90%"
#| fig-align: center

library(tidyverse)
library(unhcrthemes)

data(idp, package = "unhcrthemes")

idp_total <- idp |>
  group_by(year) |>
  summarise(idp = sum(idp, na.rm = TRUE) / 1e6) |>
  ungroup()

ggplot(idp_total) +
  geom_col(aes(x = year, y = idp),
           fill = unhcr_pal(n = 1, "pal_blue"),
           width = 0.8) +
  labs(title = "Globalement IDP displacement | 2010 - 2019",
       y = "Number of people (in million)",
       caption = "Source: UNHCR Refugee Data Finder") +
  scale_y_continuous(expand = expansion(c(0, 0.1))) +
  scale_x_continuous(breaks = seq(2010, 2019, 1)) +
  theme_unhcr(font_size = 22 ,grid = "Y", axis_title = "y")
```

# Tables

Use the `knitr::kable()` function to insert simple already stylized tables. For example:

```{r}
knitr::kable(head(idp))
```

# Source code 

To include code, use fenced code blocks with a language specifier. By default the `echo` parameter of code block is set to true, turn it to `false` to hide the code in the document.

```{markdown}
#| echo: true

\```{r}
#| echo: true
#| warning: false
library(tidyverse)
library(unhcrthemes)
\```

```

There are wide variety of options available to customize the display of source code within HTML documents, check the [Quarto documentation](https://quarto.org/docs/output-formats/html-code.html) for more information.

# Images

As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.

<div style="margin-left: -1rem;">
For example, to create a UNHCR blue box with white text use the following code example:
</div>



[This is a span that has the class aside which places it in the margin without a footnote number.]{.aside}

# Dark BG {.dark}

As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.

As mentioned, adding a specific background color works exactly the same way as the text color. The main difference though is that usually background color will be applied on fenced `divs` but all the `CSS` classes work regardless of it's application to a `span` or a `div`.

Just be careful to apply some coloring to the text if the contrast between the text and the background isn't sufficient and be mindful of the potential `padding` and `margin` needed.